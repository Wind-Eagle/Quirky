#ifndef QUIRKY_SRC_EVAL_PSQ_H
#define QUIRKY_SRC_EVAL_PSQ_H

#include <array>

#include "../core/board/board.h"
#include "../core/util.h"
#include "score.h"

namespace q_eval {

inline constexpr uint16_t PSQ_SIZE = q_core::BOARD_SIZE * q_core::NUMBER_OF_CELLS;

inline constexpr uint16_t GetPSQIndex(const q_core::cell_t cell, q_core::coord_t src) {
    return cell * q_core::BOARD_SIZE + src;
}

inline constexpr std::array<ScorePair, q_core::NUMBER_OF_PIECES> PIECE_COST = {0, 260, 280, 450, 850, 0};

inline constexpr std::array<ScorePair, PSQ_SIZE> GetPSQ(
    const std::array<ScorePair, q_core::BOARD_SIZE * q_core::NUMBER_OF_PIECES>& psq) {
    std::array<ScorePair, PSQ_SIZE> res{};
    for (q_core::cell_t cell = 0; cell < q_core::NUMBER_OF_CELLS; cell++) {
        for (q_core::coord_t coord = 0; coord < q_core::BOARD_SIZE; coord++) {
            if (cell == q_core::EMPTY_CELL) {
                continue;
            }
            q_core::Piece piece = q_core::GetCellPiece(cell);
            const ScorePair& cur_value =
                psq[(static_cast<size_t>(piece) - 1) * q_core::BOARD_SIZE + coord];
            if (q_core::GetCellColor(cell) == q_core::Color::White) {
                res[GetPSQIndex(cell, coord)] = cur_value + PIECE_COST[static_cast<uint8_t>(piece) - 1];
            } else {
                res[GetPSQIndex(cell, q_core::FlipCoord(coord))] = (cur_value + PIECE_COST[static_cast<uint8_t>(piece) - 1]) * (-1);
            }
        }
    }
    return res;
}

inline constexpr std::array<ScorePair, PSQ_SIZE> PSQ =
    GetPSQ({(0, 0),     (0, 0),       (0, 0),     (0, 0),     (0, 0),     (0, 0),     (0, 0),
            (0, 0),     (-5, -5),     (0, 0),     (-10, -10), (-21, -21), (1, 1),     (8, 8),
            (11, 11),   (-18, -18),   (-6, -6),   (-6, -6),   (-12, -12), (-21, -21), (-9, -9),
            (-9, -9),   (3, 3),       (-15, -15), (-5, -5),   (-2, -2),   (-3, -3),   (-6, -6),
            (-20, -20), (-8, -8),     (-8, -8),   (-16, -16), (14, 14),   (11, 11),   (-5, -5),
            (0, 0),     (9, 9),       (-8, -8),   (0, 0),     (-5, -5),   (71, 71),   (68, 68),
            (60, 60),   (61, 61),     (43, 43),   (37, 37),   (41, 41),   (49, 49),   (147, 147),
            (156, 156), (164, 164),   (112, 112), (134, 134), (117, 117), (127, 127), (114, 114),
            (0, 0),     (0, 0),       (0, 0),     (0, 0),     (0, 0),     (0, 0),     (0, 0),
            (0, 0),     (-121, -121), (-51, -51), (-46, -46), (-20, -20), (-16, -16), (-14, -14),
            (-33, -33), (-83, -83),   (-58, -58), (-26, -26), (-6, -6),   (1, 1),     (2, 2),
            (-1, -1),   (-14, -14),   (-2, -2),   (-38, -38), (-14, -14), (8, 8),     (15, 15),
            (17, 17),   (17, 17),     (0, 0),     (-27, -27), (-23, -23), (3, 3),     (17, 17),
            (26, 26),   (29, 29),     (24, 24),   (16, 16),   (10, 10),   (0, 0),     (9, 9),
            (44, 44),   (52, 52),     (42, 42),   (51, 51),   (45, 45),   (14, 14),   (-13, -13),
            (0, 0),     (37, 37),     (32, 32),   (47, 47),   (41, 41),   (23, 23),   (7, 7),
            (-28, -28), (-6, -6),     (14, 14),   (17, 17),   (45, 45),   (32, 32),   (-7, -7),
            (-33, -33), (-55, -55),   (-15, -15), (3, 3),     (-2, -2),   (-5, -5),   (-20, -20),
            (-42, -42), (-89, -89),   (-24, -24), (-11, -11), (-28, -28), (-16, -16), (-19, -19),
            (-10, -10), (-33, -33),   (-57, -57), (-11, -11), (-8, -8),   (10, 10),   (0, 0),
            (6, 6),     (-2, -2),     (10, 10),   (-39, -39), (-12, -12), (20, 20),   (9, 9),
            (16, 16),   (17, 17),     (13, 13),   (13, 13),   (-13, -13), (-5, -5),   (0, 0),
            (25, 25),   (17, 17),     (18, 18),   (15, 15),   (-7, -7),   (-9, -9),   (-19, -19),
            (3, 3),     (16, 16),     (33, 33),   (26, 26),   (16, 16),   (10, 10),   (-7, -7),
            (-4, -4),   (0, 0),       (6, 6),     (15, 15),   (21, 21),   (10, 10),   (15, 15),
            (18, 18),   (-35, -35),   (-1, -1),   (3, 3),     (11, 11),   (2, 2),     (21, 21),
            (-20, -20), (-9, -9),     (-23, -23), (-15, -15), (-9, -9),   (-20, -20), (10, 10),
            (-34, -34), (16, 16),     (-18, -18), (-6, -6),   (-4, -4),   (-13, -13), (-14, -14),
            (-6, -6),   (-14, -14),   (-8, -8),   (-9, -9),   (-25, -25), (-28, -28), (-21, -21),
            (-24, -24), (-21, -21),   (-17, -17), (-11, -11), (-19, -19), (-15, -15), (-13, -13),
            (-21, -21), (-24, -24),   (-24, -24), (-22, -22), (-2, -2),   (-13, -13), (-2, -2),
            (-7, -7),   (-5, -5),     (-6, -6),   (-13, -13), (-10, -10), (-9, -9),   (-18, -18),
            (8, 8),     (2, 2),       (14, 14),   (4, 4),     (7, 7),     (26, 26),   (5, 5),
            (9, 9),     (22, 22),     (17, 17),   (12, 12),   (13, 13),   (4, 4),     (22, 22),
            (18, 18),   (20, 20),     (24, 24),   (21, 21),   (29, 29),   (34, 34),   (32, 32),
            (30, 30),   (23, 23),     (32, 32),   (9, 9),     (11, 11),   (19, 19),   (4, 4),
            (22, 22),   (14, 14),     (23, 23),   (34, 34),   (-36, -36), (-44, -44), (-24, -24),
            (-26, -26), (-32, -32),   (-78, -78), (-89, -89), (-74, -74), (-36, -36), (-21, -21),
            (-7, -7),   (-19, -19),   (-11, -11), (-29, -29), (-32, -32), (-58, -58), (-44, -44),
            (-22, -22), (-14, -14),   (-3, -3),   (0, 0),     (-4, -4),   (-2, -2),   (-22, -22),
            (-24, -24), (-5, -5),     (3, 3),     (13, 13),   (17, 17),   (15, 15),   (7, 7),
            (8, 8),     (-20, -20),   (3, 3),     (16, 16),   (22, 22),   (36, 36),   (24, 24),
            (31, 31),   (5, 5),       (-19, -19), (-13, -13), (23, 23),   (14, 14),   (61, 61),
            (80, 80),   (57, 57),     (55, 55),   (-11, -11), (-15, -15), (26, 26),   (22, 22),
            (57, 57),   (44, 44),     (15, 15),   (39, 39),   (0, 0),     (-1, -1),   (24, 24),
            (30, 30),   (53, 53),     (45, 45),   (19, 19),   (19, 19),   (-29, -20), (116, -64),
            (75, -41),  (-78, -23),   (38, -67),  (-38, -27), (120, -69), (109, -90), (61, -43),
            (43, -17),  (45, -23),    (-10, -14), (-2, -18),  (14, -15),  (69, -27),  (118, -62),
            (21, -38),  (40, -21),    (-5, -9),   (-42, -2),  (-46, 5),   (-15, -4),  (-9, -10),
            (3, -16),   (-68, -16),   (-48, 2),   (-29, 3),   (-44, 16),  (-60, 21),  (-78, 28),
            (-90, 21),  (-99, 10),    (-101, 12), (-90, 29),  (-119, 26), (-90, 28),  (-77, 43),
            (-183, 64), (-132, 59),   (-94, 35),  (-74, 26),  (-68, 55),  (-54, -10), (-146, 39),
            (-117, 43), (-66, 83),    (-81, 87),  (-114, 45), (13, 12),   (-27, -11), (21, 9),
            (-125, 4),  (-15, 51),    (-28, 65),  (-48, 100), (-57, 43),  (96, -69),  (12, -8),
            (-18, -24), (8, 21),      (-11, 8),   (-24, 41),  (89, 36),   (-35, -40)});

inline constexpr q_core::coord_t GetCoordFromPSQIndex(uint16_t index) {
    return index % q_core::BOARD_SIZE;
}

inline constexpr q_core::cell_t GetCellFromPSQIndex(uint16_t index) {
    return index / q_core::BOARD_SIZE;
}

inline constexpr ScorePair GetPSQValue(const q_core::cell_t cell, q_core::coord_t src) {
    return PSQ[GetPSQIndex(cell, src)];
}

}  // namespace q_eval

#endif  // QUIRKY_SRC_EVAL_PSQ_H
